plugins {
    id 'java'
    id 'application'  	// similar to mvn exec:java
    id 'maven-publish'
    id 'org.openjfx.javafxplugin' version '0.0.8' apply(false)
}

def javaVersion = JavaVersion.current()

if (javaVersion >= JavaVersion.VERSION_1_7 && javaVersion < JavaVersion.VERSION_1_9) {
    apply from: "build-jdk7.gradle"
} else if (javaVersion >= JavaVersion.VERSION_11) {
    apply from: "build-jdk11.gradle"
} else {
    throw new GradleException("JITWatch is unsupported on Java $javaVersion")
}

dependencies {
    compile project(':core')

    compile 'org.slf4j:slf4j-api:1.7.12', 'ch.qos.logback:logback-classic:1.2.3', 'ch.qos.logback:logback-core:1.2.3'
    testCompile 'junit:junit:4.12'
}

mainClassName = 'org.adoptopenjdk.jitwatch.launch.LaunchUI'

run {
    workingDir = rootDir
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': mainClassName
    }

    group = 'build'
    baseName = 'ui-shadow'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

publishing {
    publications {
        bintray(MavenPublication) {
            from components.java
            groupId project.group
            artifactId project.name
            version project.version

            artifact sourceJar {
                classifier 'sources'
            }

            artifact javadocJar {
                classifier 'javadoc'
            }
        }
    }
}
